name: Functional Testing

on:
  push:
    branches:
      - "main"
      - "develop"
  pull_request:
    types: [ready_for_review, synchronize, opened]

jobs:
  core-database:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [14.x]

    env:
      CORE_DB_DATABASE: ark_unitnet
      CORE_DB_USERNAME: ark
      POSTGRES_USER: ark
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ark_unitnet

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: "2.7"

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Update system
        run: sudo apt-get update -y

      - name: Install xsel & postgresql-client
        run: sudo apt-get install -q xsel postgresql-client

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
          run_install: true

      - name: Build
        run: pnpm run build

      - name: Create .core/database directory
        run: mkdir -p $HOME/.core/database

      - name: Functional tests
        run: pnpm run test __tests__/functional/core-database/

  delegate-registration:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: "2.7"

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Update system
        run: sudo apt-get update -y

      - name: Install xsel & postgresql-client
        run: sudo apt-get install -q xsel postgresql-client

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
          run_install: true

      - name: Build
        run: pnpm run build

      - name: Create .core/database directory
        run: mkdir -p $HOME/.core/database

      - name: Functional tests
        run: pnpm run test __tests__/functional/transaction-forging/delegate-registration.test.ts
        env:
          CORE_DB_DATABASE: ark_unitnet
          CORE_DB_USERNAME: ark

  delegate-resignation:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: "2.7"

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Update system
        run: sudo apt-get update -y

      - name: Install xsel & postgresql-client
        run: sudo apt-get install -q xsel postgresql-client

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
          run_install: true

      - name: Build
        run: pnpm run build

      - name: Create .core/database directory
        run: mkdir -p $HOME/.core/database

      - name: Functional tests
        run: pnpm run test __tests__/functional/transaction-forging/delegate-resignation.test.ts
        env:
          CORE_DB_DATABASE: ark_unitnet
          CORE_DB_USERNAME: ark

  multi-payment:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: "2.7"

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Update system
        run: sudo apt-get update -y

      - name: Install xsel & postgresql-client
        run: sudo apt-get install -q xsel postgresql-client

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
          run_install: true

      - name: Build
        run: pnpm run build

      - name: Create .core/database directory
        run: mkdir -p $HOME/.core/database

      - name: Functional tests
        run: pnpm run test __tests__/functional/transaction-forging/multi-payment.test.ts
        env:
          CORE_DB_DATABASE: ark_unitnet
          CORE_DB_USERNAME: ark

  multi-signature-registration:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: "2.7"

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Update system
        run: sudo apt-get update -y

      - name: Install xsel & postgresql-client
        run: sudo apt-get install -q xsel postgresql-client

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
          run_install: true

      - name: Build
        run: pnpm run build

      - name: Create .core/database directory
        run: mkdir -p $HOME/.core/database

      - name: Functional tests
        run: pnpm run test __tests__/functional/transaction-forging/multi-signature-registration.test.ts
        env:
          CORE_DB_DATABASE: ark_unitnet
          CORE_DB_USERNAME: ark

  transfer:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: "2.7"

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Update system
        run: sudo apt-get update -y

      - name: Install xsel & postgresql-client
        run: sudo apt-get install -q xsel postgresql-client

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
          run_install: true

      - name: Build
        run: pnpm run build

      - name: Create .core/database directory
        run: mkdir -p $HOME/.core/database

      - name: Functional tests
        run: pnpm run test __tests__/functional/transaction-forging/transfer.test.ts
        env:
          CORE_DB_DATABASE: ark_unitnet
          CORE_DB_USERNAME: ark

  vote:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Update system
        run: sudo apt-get update -y

      - name: Install xsel & postgresql-client
        run: sudo apt-get install -q xsel postgresql-client

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
          run_install: true

      - name: Build
        run: pnpm run build

      - name: Create .core/database directory
        run: mkdir -p $HOME/.core/database

      - name: Functional tests
        run: pnpm run test __tests__/functional/transaction-forging/vote.test.ts
        env:
          CORE_DB_DATABASE: ark_unitnet
          CORE_DB_USERNAME: ark
